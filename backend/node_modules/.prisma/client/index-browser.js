
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.18.0
 * Query Engine version: 34b5a692b7bd79939a9a2c3ef97d816e749cda2f
 */
Prisma.prismaVersion = {
  client: "6.18.0",
  engine: "34b5a692b7bd79939a9a2c3ef97d816e749cda2f"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.ProgramStudiScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  jenjang: 'jenjang',
  total_sks_lulus: 'total_sks_lulus'
};

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password_hash: 'password_hash',
  nama: 'nama',
  role: 'role',
  program_studi_id: 'program_studi_id'
};

exports.Prisma.KurikulumScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  tahun: 'tahun',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  program_studi_id: 'program_studi_id'
};

exports.Prisma.MataKuliahScalarFieldEnum = {
  id: 'id',
  kode_mk: 'kode_mk',
  nama: 'nama',
  sks: 'sks',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  kurikulum_id: 'kurikulum_id'
};

exports.Prisma.PIGroupScalarFieldEnum = {
  id: 'id',
  kode_grup: 'kode_grup',
  nama_grup: 'nama_grup',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  kurikulum_id: 'kurikulum_id'
};

exports.Prisma.PerformanceIndicatorScalarFieldEnum = {
  id: 'id',
  kode_pi: 'kode_pi',
  deskripsi: 'deskripsi',
  is_locked: 'is_locked',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  pi_group_id: 'pi_group_id'
};

exports.Prisma.CPLScalarFieldEnum = {
  id: 'id',
  kode_cpl: 'kode_cpl',
  deskripsi: 'deskripsi',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  kurikulum_id: 'kurikulum_id',
  pi_group_id: 'pi_group_id'
};

exports.Prisma.TahunAjaranScalarFieldEnum = {
  id: 'id',
  tahun: 'tahun',
  semester: 'semester'
};

exports.Prisma.KelasScalarFieldEnum = {
  id: 'id',
  nama_kelas: 'nama_kelas',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  mata_kuliah_id: 'mata_kuliah_id',
  tahun_ajaran_id: 'tahun_ajaran_id'
};

exports.Prisma.DosenPengampuScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  kelas_id: 'kelas_id',
  dosen_id: 'dosen_id'
};

exports.Prisma.PesertaKelasScalarFieldEnum = {
  id: 'id',
  createdAt: 'createdAt',
  kelas_id: 'kelas_id',
  mahasiswa_id: 'mahasiswa_id'
};

exports.Prisma.RPSScalarFieldEnum = {
  id: 'id',
  file_path: 'file_path',
  is_locked: 'is_locked',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  kelas_id: 'kelas_id'
};

exports.Prisma.CPMKScalarFieldEnum = {
  id: 'id',
  kode_cpmk: 'kode_cpmk',
  is_locked: 'is_locked',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  kelas_id: 'kelas_id'
};

exports.Prisma.CPMK_PI_MapScalarFieldEnum = {
  cpmk_id: 'cpmk_id',
  pi_id: 'pi_id'
};

exports.Prisma.KomponenPenilaianScalarFieldEnum = {
  id: 'id',
  nama: 'nama',
  bobot: 'bobot',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  cpmk_id: 'cpmk_id'
};

exports.Prisma.NilaiScalarFieldEnum = {
  id: 'id',
  nilai_angka: 'nilai_angka',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  peserta_kelas_id: 'peserta_kelas_id',
  komponen_penilaian_id: 'komponen_penilaian_id'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};
exports.UserRole = exports.$Enums.UserRole = {
  ADMIN: 'ADMIN',
  DOSEN: 'DOSEN',
  MAHASISWA: 'MAHASISWA'
};

exports.Semester = exports.$Enums.Semester = {
  GANJIL: 'GANJIL',
  GENAP: 'GENAP'
};

exports.Prisma.ModelName = {
  ProgramStudi: 'ProgramStudi',
  User: 'User',
  Kurikulum: 'Kurikulum',
  MataKuliah: 'MataKuliah',
  PIGroup: 'PIGroup',
  PerformanceIndicator: 'PerformanceIndicator',
  CPL: 'CPL',
  TahunAjaran: 'TahunAjaran',
  Kelas: 'Kelas',
  DosenPengampu: 'DosenPengampu',
  PesertaKelas: 'PesertaKelas',
  RPS: 'RPS',
  CPMK: 'CPMK',
  CPMK_PI_Map: 'CPMK_PI_Map',
  KomponenPenilaian: 'KomponenPenilaian',
  Nilai: 'Nilai'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }

        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
